{"version":3,"sources":["App.js","index.js"],"names":["Cell","require","array_buffer_to_buffer","ab","buffer","Buffer","byteLength","view","Uint8Array","i","length","App","file","useRef","onFileChange","useCallback","event","fr","FileReader","onload","e","a","myCell","fromBoc","target","result","slice","beginParse","cellRef","readRef","flags","readUint","destAddress","readAddress","toFriendly","amount","readCoins","toString","document","getElementById","textContent","BigNumber","dividedBy","toFormat","readAsArrayBuffer","current","files","className","ref","type","onChange","id","ReactDOM","render"],"mappings":"0OAIMA,EAAOC,EAAQ,IAAOD,KAE5B,SAASE,EAAuBC,GAG5B,IAFA,IAAMC,EAAS,IAAIC,EAAOF,EAAGG,YACvBC,EAAO,IAAIC,WAAWL,GACnBM,EAAI,EAAGA,EAAIL,EAAOM,SAAUD,EACjCL,EAAOK,GAAKF,EAAKE,GAErB,OAAOL,EAwCIO,IArCf,WAEI,IAAMC,EAAOC,iBAAO,MAEdC,EAAeC,uBAAY,SAACC,GACtB,IAAIC,EAAK,IAAIC,WACbD,EAAGE,OAAH,uCAAY,WAAgBC,GAAhB,yBAAAC,EAAA,sDACFC,EAAStB,EAAKuB,QAAQrB,EAAuBkB,EAAEI,OAAOC,SACtDC,EAAQJ,EAAO,GAAGK,aAClBC,EAAUF,EAAMG,UAChBC,EAAQF,EAAQG,SAAS,GAC3BC,EAAcJ,EAAQK,cAAcC,aACpCC,EAASP,EAAQQ,YAAYC,SAAS,IAC1CC,SAASC,eAAe,SAASC,YAAcV,EAC/CQ,SAASC,eAAe,QAAQC,YAAcR,EAC9CM,SAASC,eAAe,UAAUC,YAAc,IAAIC,IAAUN,GAAQO,UAAU,OAAOC,SAAS,GATxF,2CAAZ,sDAWR1B,EAAG2B,kBAAkBhC,EAAKiC,QAAQC,MAAM,MACzC,IAEH,OACI,qBAAKC,UAAU,MAAf,SACI,yBAAQA,UAAU,aAAlB,UACI,gCACI,uBAAOC,IAAKpC,EAAMqC,KAAK,OAAOC,SAAUpC,IACxC,wCAAU,qBAAKqC,GAAG,aAClB,oDAAsB,qBAAKA,GAAG,YAC9B,yCAAW,qBAAKA,GAAG,iBAEvB,8B,wDC5ChB,0DAMAC,IAASC,OACL,cAAC,IAAD,IACAf,SAASC,eAAe,U","file":"static/js/main.1b11135f.chunk.js","sourcesContent":["import { useCallback, useRef } from 'react';\nimport BigNumber from \"bignumber.js\";\nimport './App.css';\n\nconst Cell = require(\"ton\").Cell\n\nfunction array_buffer_to_buffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n    return buffer;\n}\n\nfunction App() {\n\n    const file = useRef(null);\n\n    const onFileChange = useCallback((event) => {\n                let fr = new FileReader();\n                fr.onload = async function (e) {\n                    const myCell = Cell.fromBoc(array_buffer_to_buffer(e.target.result));\n                    const slice = myCell[0].beginParse();\n                    const cellRef = slice.readRef();\n                    const flags = cellRef.readUint(6);  // flags\n                    let destAddress = cellRef.readAddress().toFriendly();  // destation address\n                    let amount = cellRef.readCoins().toString(10)   // amount\n                    document.getElementById('flags').textContent = flags;\n                    document.getElementById('dest').textContent = destAddress;\n                    document.getElementById('amount').textContent = new BigNumber(amount).dividedBy('1e9').toFormat(4);\n                }\n        fr.readAsArrayBuffer(file.current.files[0]);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <div>\n                    <input ref={file} type=\"file\" onChange={onFileChange}></input>\n                    <p>Flags: <pre id=\"flags\"></pre></p>\n                    <p>Destation address: <pre id=\"dest\"></pre></p>\n                    <p>Amount: <pre id=\"amount\"></pre></p>\n                </div>\n                <p>\n                    \n                </p>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","// import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}